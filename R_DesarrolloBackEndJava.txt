Hola Mundo
Mi nombre es Elio Esteban Tapia Peña
Edad 21 años
Fecha de creacion 21/12/2019

Ruta Desarrollo backEnd en Java

Primer Curso:
Curso de Git y GitHub
"Sistema de Control de versiones"

Comandos de consola:

cd //Muestra el home
pwd //Muestra la direccion actual
ls //Archivos dentro de la direccion actual sin listar
ls -al //Listado de Archivos dentro de la direccion actual ocultos y visibles
mkdir //Crea una carpeta en la direccion actual
touch //Crea un archivo ejem: .txt
cat //Lee un archivo plano de arriba a abajo
tac //Lee el archivo de abajo hacia arriba
vim //Permite modificar el archivo
    :w //Guarda los cambios en el archivo
    :q //Cierra el archivo
    :q! //Fuerza el cierre del archivo sin guardar cambios
code //Abre el Visual Studio code
history //Muestra el historial de comando utilizados
git init //Inicia un master en la carpeta donde estemos ubicados
git status //Muestra el status del proyecto, si hay archivos que sufrieron alteraciones y si se les esta dando seguimiento a estas
git add //Agrega un archivo al Staging
git commit //Lo manda al repositorio
got commit -m "Comentario" //Deja un comentario en el cambio, buena practica
git rm --catch //Elimina los archivos del área de Staging
git rm --force // Elimina los archivos de Git y del disco duro.
git config //Todas las configuraciones de git como funcionan
git config --list //La configuracion por defecto de el git
git config --list --show--origin //Donde estan las configuracion guardadas
git config --global //Vamos a cambiar todos los usuarios globales
- //Usas las letras
-- //Usas la palabra completa
git config --global user.name "Elio Tapia" //Darle nombre al usuario del git
git confi --global user.email "eliotapia199809@gmail.com" //Darle un correo al usuario del git
git add . //Añade todos los archivos con cambios  dentro de la carpeta del git al Staging
git log NombreDelArchivo //Muestra el historial del archivos
git show NombreDelArchivo //Muestra la ultima version del archivo y lo compara con la version anterior
git commit //Te va a pedir un mensaje, lo pones y para salir es Esc Shift Z Z
git diff VersionActual VersionAComporar //Compara dos versiones
git reset //Permite volver a un reset anterior
git reset Numerodelarchivo --hard //Vuelve en el tiempo elimina todo lo que se haya agregadp
git reset NumeroDelArchivo --soft //Vuelve a la version anterior
git reset HEAD //Este es el comando para sacar archivos del área de Staging. 
git log --stat //Muestra los cambios del archivo se sale con q
git checkout NumeroDelArchivo ArchivoDeRegreso //Para ver como era el archivo antes
git show //Muestra informacion del ultimo cambio realziado
git commit -am "Comentario" //Manda directamente al repositorio
git checkout NombreRama //Movernos entre ramas
//Respaldo master
git merge NombreDeLaRama //Fuciona dos ramas, se debe estar en la rama principal
git log --graph --all //Se dibura una reprensentacion grafica de las ramas
git remote add origin Direccion //Se agrega un repositorio remoto al proyecto
git remote //Te muestra el nombre del repositorio remoto
git remote -v //Sea verbal
git pull origin master --allow-unrelated-histories //para la primera vez que mandas a traer un repositorio
git pull origin master //Traer los datos del repositorio
git push origin master //Envia los datos del proyecto al repositorio remoto
ssh-keygen -t rsa -b 4096 -C "tu@email.com" //Para crer un llave privada y publica, da enter y introduce una palabra para mas seguridad, (Otro algoritmo Ed25519)
eval $(ssh-agent -s) //Encender el "servidor" de llaves SSH de tu computadora
ssh-add ruta-donde-guardaste-tu-llave-privada //# Añadir tu llave SSH a este "servidor"
git remote set-url origin Direccion //Cambia la direccion de push y fetch
git log --all --graph --decorate --oneline //Se dibura una reprensentacion grafica de las ramas simplificado
git tag //Muestra un listado de los tag
git tag add -a NombreTag IdDelCommit //Añade un tag
git show-ref --tags //informacion mas detallada de los tags
git push origin --tags //Envia los tags al GitHub
git push origin :refs/tags/NombreDelTag //Para borrar el tag de el GitHub
git tag -d NombreDelTag //Eliminar un tag del ordenador
git branch //Muestra todas las ramas existentes
git show-branch //Todas las ramas y informacion de ellas
git show-branch --all//Informacion mas detallada
gitk //Abre la historia en un software
git clone Direccion //Para clonar un repositorio
git rebase NombreDeLaRama //Mala practica, para usar este comando se utiliza primero en la rama secundaria y luego en la principal
git stash //Para hacer pequeños cambios que no merecen un rama
git clean --dry-run //Te Muestra un listado de archivos a Eliminar
git clean -f //Borra todos los archivos del listado las carpetas se borran manual y omite los de .gitignore
git cherry-pick IdCommit //Mala practica